
//▒██   ██▒▒██   ██▒▒██   ██▒   ▄▄▄█████▓ ██░ ██ ▓█████    ▓█████▄  ▄▄▄       ██▀███   ██ ▄█▀ ██▓███   ██▀███   ▒█████    ▄████  ██▀███   ▄▄▄       ███▄ ▄███▓▓█████  ██▀███     ▒██   ██▒▒██   ██▒▒██   ██▒
//▒▒ █ █ ▒░▒▒ █ █ ▒░▒▒ █ █ ▒░   ▓  ██▒ ▓▒▓██░ ██▒▓█   ▀    ▒██▀ ██▌▒████▄    ▓██ ▒ ██▒ ██▄█▒ ▓██░  ██▒▓██ ▒ ██▒▒██▒  ██▒ ██▒ ▀█▒▓██ ▒ ██▒▒████▄    ▓██▒▀█▀ ██▒▓█   ▀ ▓██ ▒ ██▒   ▒▒ █ █ ▒░▒▒ █ █ ▒░▒▒ █ █ ▒░
//░░  █   ░░░  █   ░░░  █   ░   ▒ ▓██░ ▒░▒██▀▀██░▒███      ░██   █▌▒██  ▀█▄  ▓██ ░▄█ ▒▓███▄░ ▓██░ ██▓▒▓██ ░▄█ ▒▒██░  ██▒▒██░▄▄▄░▓██ ░▄█ ▒▒██  ▀█▄  ▓██    ▓██░▒███   ▓██ ░▄█ ▒   ░░  █   ░░░  █   ░░░  █   ░
// ░ █ █ ▒  ░ █ █ ▒  ░ █ █ ▒    ░ ▓██▓ ░ ░▓█ ░██ ▒▓█  ▄    ░▓█▄   ▌░██▄▄▄▄██ ▒██▀▀█▄  ▓██ █▄ ▒██▄█▓▒ ▒▒██▀▀█▄  ▒██   ██░░▓█  ██▓▒██▀▀█▄  ░██▄▄▄▄██ ▒██    ▒██ ▒▓█  ▄ ▒██▀▀█▄      ░ █ █ ▒  ░ █ █ ▒  ░ █ █ ▒ 
//▒██▒ ▒██▒▒██▒ ▒██▒▒██▒ ▒██▒     ▒██▒ ░ ░▓█▒░██▓░▒████▒   ░▒████▓  ▓█   ▓██▒░██▓ ▒██▒▒██▒ █▄▒██▒ ░  ░░██▓ ▒██▒░ ████▓▒░░▒▓███▀▒░██▓ ▒██▒ ▓█   ▓██▒▒██▒   ░██▒░▒████▒░██▓ ▒██▒   ▒██▒ ▒██▒▒██▒ ▒██▒▒██▒ ▒██▒
//▒▒ ░ ░▓ ░▒▒ ░ ░▓ ░▒▒ ░ ░▓ ░     ▒ ░░    ▒ ░░▒░▒░░ ▒░ ░    ▒▒▓  ▒  ▒▒   ▓▒█░░ ▒▓ ░▒▓░▒ ▒▒ ▓▒▒▓▒░ ░  ░░ ▒▓ ░▒▓░░ ▒░▒░▒░  ░▒   ▒ ░ ▒▓ ░▒▓░ ▒▒   ▓▒█░░ ▒░   ░  ░░░ ▒░ ░░ ▒▓ ░▒▓░   ▒▒ ░ ░▓ ░▒▒ ░ ░▓ ░▒▒ ░ ░▓ ░
//░░   ░▒ ░░░   ░▒ ░░░   ░▒ ░       ░     ▒ ░▒░ ░ ░ ░  ░    ░ ▒  ▒   ▒   ▒▒ ░  ░▒ ░ ▒░░ ░▒ ▒░░▒ ░       ░▒ ░ ▒░  ░ ▒ ▒░   ░   ░   ░▒ ░ ▒░  ▒   ▒▒ ░░  ░      ░ ░ ░  ░  ░▒ ░ ▒░   ░░   ░▒ ░░░   ░▒ ░░░   ░▒ ░
// ░    ░   ░    ░   ░    ░       ░       ░  ░░ ░   ░       ░ ░  ░   ░   ▒     ░░   ░ ░ ░░ ░ ░░         ░░   ░ ░ ░ ░ ▒  ░ ░   ░   ░░   ░   ░   ▒   ░      ░      ░     ░░   ░     ░    ░   ░    ░   ░    ░  
// ░    ░   ░    ░   ░    ░               ░  ░  ░   ░  ░      ░          ░  ░   ░     ░  ░               ░         ░ ░        ░    ░           ░  ░       ░      ░  ░   ░         ░    ░   ░    ░   ░    ░  
//                                                          ░                                                        

//=======================================================================================
//          PeXPloit Upgrade window well this will never get used
//=======================================================================================



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Net;
using System.Diagnostics;

namespace PeXploit
{
    public partial class Download_WIndow : Form
    {
        public Download_WIndow()
        {
            InitializeComponent();
        }

        #region << Download Code >>
        WebClient webClient;               // Our WebClient that will be doing the downloading for us
        Stopwatch sw = new Stopwatch();    // The stopwatch which we will be using to calculate the download spe

        public void DownloadFile(string urlAddress, string location)
        {
            using (webClient = new WebClient())
            {
                webClient.DownloadFileCompleted += new AsyncCompletedEventHandler(Completed);
                webClient.DownloadProgressChanged += new DownloadProgressChangedEventHandler(ProgressChanged);

                // The variable that will be holding the url address (making sure it starts with http://)
                Uri URL = urlAddress.StartsWith("http://", StringComparison.OrdinalIgnoreCase) ? new Uri(urlAddress) : new Uri("http://" + urlAddress);

                // Start the stopwatch which we will be using to calculate the download speed
                sw.Start();

                try
                {
                    // Start downloading the file
                    webClient.DownloadFileAsync(URL, location);
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }


        // The event that will fire whenever the progress of the WebClient is changed
        private void ProgressChanged(object sender, DownloadProgressChangedEventArgs e)
        {
            // Calculate download speed and output it to labelSpeed.
            //this.notifyIcon1.ShowBalloonTip(0x7d0, "Downloading", string.Format("{0} kb/s", (e.BytesReceived / 1024d / sw.Elapsed.TotalSeconds).ToString("0.00")), ToolTipIcon.Info);

            // Update the progressbar percentage only when the value is not the same.
            progressBar1.Value = e.ProgressPercentage;

            // Show the percentage on our label.
            //this.Text = e.ProgressPercentage.ToString() + "%";

            // Update the label with how much data have been downloaded so far and the total size of the file we are currently downloading
            this.label2.Text = "Downloading " + (string.Format("{0} MB's / {1} MB's",
                (e.BytesReceived / 1024d / 1024d).ToString("0.00"),
                (e.TotalBytesToReceive / 1024d / 1024d).ToString("0.00")));
        }

        // The event that will trigger when the WebClient is completed
        private void Completed(object sender, AsyncCompletedEventArgs e)
        {
            // Reset the stopwatch.
            sw.Reset();

            if (e.Cancelled == true)
            {
                this.notifyIcon1.ShowBalloonTip(0x7d0, "Failed", "Download has been canceled.", ToolTipIcon.Error);
            }
            else
            {
                this.notifyIcon1.ShowBalloonTip(0x7d0, "Downloaded", "Download completed!", ToolTipIcon.Info);
            }
        }
        #endregion << Download Code >>

        public string url { get; set; }

        private void Download_WIndow_Load(object sender, EventArgs e)
        {
            if (System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable() == true)
            {
                DownloadFile(url, Application.StartupPath + "\\Pexploit.zip");
                this.Close();
            }
            else
            {
                label2.Text = "No Network Access ... closing";
                System.Threading.Thread.Sleep(1000);
                this.Close();
            }
        }

        private void Download_WIndow_FormClosing(object sender, FormClosingEventArgs e)
        {
            DialogResult result = MessageBox.Show("Your About To Close The Downloading Window \n\r are you sure u wanna do this ?", "Warrning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (result == DialogResult.Yes)
            {
                Application.Exit();
            }
            else
            {
               e.Cancel = true;
            }

        }
    }
}
